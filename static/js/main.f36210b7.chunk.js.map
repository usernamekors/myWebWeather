{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","components/App.js","index.js"],"names":["Title","styled","div","_templateObject","Titles","react_default","a","createElement","Wrapper","form","Form_templateObject","Input","input","_templateObject2","Button","button","_templateObject3","Form","props","onSubmit","getWeather","type","name","placeholder","WeatherWrapper","Weather_templateObject","Weather","_this$props","this","city","country","clouds","temp","humidity","tempmin","tempmax","wind","description","error","React","Component","API_KEY","App","state","_callee","e","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","_this","setState","sys","all","main","temp_min","temp_max","speed","weather","stop","_this$state","components_Titles","components_Form","components_Weather","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f36210b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.div`\r\ntext-align:center;\r\nfont-size: 50px;\r\nletter-spacing: 2px;\r\nline-height: 1.3;\r\ntext-transform:uppercase;\r\n`\r\n\r\nconst Titles = () => (\r\n    <Title>Weather super app</Title>\r\n)\r\nexport default Titles;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.form`\r\nbackground: linear-gradient(to right, #e67e22, #e74c3c);\r\nheight: 40vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`\r\n\r\nconst Input = styled.input`\r\nborder: 0;\r\nborder-bottom: solid 5px #f16051;\r\nwidth: 30%;\r\npadding-bottom: 4px;\r\nfont-weight: lighter;\r\nletter-spacing: 2px;\r\nborder-radius: 5px;\r\nmargin-right: 20px;\r\nfont-size: 20px;\r\n`\r\n\r\nconst Button = styled.button`\r\nmargin: 5px;\r\nborder: 0;\r\npadding: 8px 20px;\r\nborder-radius: 5px;\r\nfont-weight: lighter;\r\nletter-spacing: 1px;\r\nfont-size: 15px;\r\ncursor: pointer;\r\nbackground-color: #f16051;\r\ncolor: #fff;\r\nfont-weight: 100;\r\n`\r\n\r\nconst Form = props => (\r\n    <Wrapper onSubmit={props.getWeather}>\r\n        <Input type=\"text\" name='city' placeholder='City...' />\r\n        <Input type=\"text\" name='country' placeholder='Country...' />\r\n        <Button>Get Weather</Button>\r\n    </Wrapper >\r\n)\r\nexport default Form;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst WeatherWrapper = styled.div`\r\ntext-align:center;\r\nfont-weight: lighter;\r\nletter-spacing: 1px;\r\nfont-size: 20px;\r\n`\r\n\r\nclass Weather extends React.Component {\r\n\r\n    render() {\r\n        const { city, country, clouds, temp, humidity, tempmin, tempmax, wind, description, error } = this.props\r\n        return (\r\n            <WeatherWrapper>\r\n                {city && country && <p>Location: {city}, {country}</p>}\r\n                {clouds && <p>Clouds: {clouds}</p>}\r\n                {temp && <p>Temp: {temp}</p>}\r\n                {humidity && <p>Humidity: {humidity}</p>}\r\n                {tempmin && <p>Temp min: {tempmin}</p>}\r\n                {tempmax && <p>Temp max: {tempmax}</p>}\r\n                {wind && <p>Wind speed: {wind}</p>}\r\n                {description && <p>Conditions: {description}</p>}\r\n                {error && <p>{error}</p>}\r\n            </WeatherWrapper>\r\n        )\r\n    }\r\n}\r\nexport default Weather;","import React, { Component } from 'react';\nimport './App';\nimport Titles from '../components/Titles'\nimport Form from '../components/Form'\nimport Weather from '../components/Weather'\n\nconst API_KEY = '06075299fd00ca6f2eaaeef29e4d43c4';\n\nclass App extends Component {\n\n  state = {\n    city: '',\n    country: '',\n    clouds: '',\n    temp: '',\n    humidity: '',\n    tempmin: '',\n    tempmax: '',\n    wind: '',\n    description: '',\n    error: ''\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n\n    const data = await api_call.json();\n\n    if (city && country) {\n      this.setState({\n        city: data.name,\n        country: data.sys.country,\n        clouds: data.clouds.all,\n        temp: data.main.temp,\n        humidity: data.main.humidity,\n        tempmin: data.main.temp_min,\n        tempmax: data.main.temp_max,\n        wind: data.wind.speed,\n        description: data.weather[0].description,\n        error: ''\n      });\n    } else {\n      this.setState({\n        error: 'Please enter your City and Country'\n      });\n    }\n  }\n\n  render() {\n    const { city, country, clouds, temp, humidity, tempmin, tempmax, wind, description, error } = this.state\n    return (\n      <div>\n        <Titles />\n        <Form getWeather={this.getWeather} />\n        <Weather\n          city={city}\n          country={country}\n          clouds={clouds}\n          temp={temp}\n          humidity={humidity}\n          tempmin={tempmin}\n          tempmax={tempmax}\n          wind={wind}\n          description={description}\n          error={error}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}